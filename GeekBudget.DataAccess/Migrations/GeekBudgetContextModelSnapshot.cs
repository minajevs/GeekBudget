// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace GeekBudget.DataAccess.Migrations
{
    [DbContext(typeof(GeekBudgetContext))]
    partial class GeekBudgetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("GeekBudget.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("Comment");

                    b.Property<string>("Currency");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("FromId");

                    b.Property<int?>("ToId");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("GeekBudget.Models.Tab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("Currency");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Tabs");
                });

            modelBuilder.Entity("GeekBudget.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GeekBudget.Models.Operation", b =>
                {
                    b.HasOne("GeekBudget.Models.Tab", "From")
                        .WithMany("OperationsFrom")
                        .HasForeignKey("FromId");

                    b.HasOne("GeekBudget.Models.Tab", "To")
                        .WithMany("OperationsTo")
                        .HasForeignKey("ToId");
                });
#pragma warning restore 612, 618
        }
    }
}
